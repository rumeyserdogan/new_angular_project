{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer-list/customer-list.component.css","webpack:///./src/app/customer-list/customer-list.component.html","webpack:///./src/app/customer-list/customer-list.component.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/shared/customer.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class = \\\"container\\\">\\n<app-customer></app-customer>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerService } from './shared/customer.service';\nimport { environment } from \"../environments/environment\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent,\n    CustomerListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    FormsModule\n\n  ],\n  providers: [CustomerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyLWxpc3QvY3VzdG9tZXItbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form class=\\\"form-inline\\\">\\n  <input class=\\\"form-control\\\" name=\\\"searchInput\\\" placeholder=\\\"Search\\\" #searchInput=\\\"ngModel\\\" [(ngModel)]=\\\"searchText\\\" style=\\\"width: 80%;\\\">\\n  <button class=\\\"btn btn-outline-primary\\\" (click)=\\\"searchText=''\\\">X</button>\\n</form>\\n<table class=\\\"table table-sm\\\">\\n  <thead>\\n    <th>Name</th>\\n    <th>Surname</th>\\n    <th>Email</th>\\n    <th></th>\\n  </thead>\\n  <ng-container *ngFor=\\\"let customer of customerArray\\\">\\n    <tr class=\\\"table-dark\\\" *ngIf = filterCondition(customer)>\\n      <td>{{customer.name}}</td>\\n      <td>{{customer.surname}}</td>\\n      <td>{{customer.email}}</td>       \\n        <td>\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"customerService.populateForm(customer)\\\" >Edit</button>\\n          <button class=\\\"btn btn-outline-danger\\\" (click)=\\\"onDelete(customer.$key)\\\" >Delete</button>\\n        </td>\\n    </tr>\\n  </ng-container>\\n</table>\\n<div class= \\\"alert alert= danger\\\" *ngIf= \\\"showDeleteMessage\\\">\\n  Deleted successfully.\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { CustomerService } from '../shared/customer.service';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n\n  constructor(private customerService: CustomerService) { }\n  customerArray = [];\n  showDeleteMessage: boolean;\n  searchText: string = '';\n\n  ngOnInit() {\n    this.customerService.getCustomers().subscribe(\n      list => {\n        this.customerArray = list.map(item => {\n          return {\n            $key: item.key,\n            ...item.payload.val()\n          };\n        });\n      });\n  }\n  \n  onDelete($key) {\n    if (confirm('Are you sure to delete this record ?')) {\n      this.customerService.deleteCustomer($key);\n      this.showDeleteMessage = true;\n      setTimeout(() => this.showDeleteMessage = false, 3000);\n    }\n  }\n\n  \n  filterCondition(customer) {\n    return customer.name.toLowerCase().indexOf(this.searchText.toLowerCase()) != -1;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class = \\\"row\\\">\\n  <div class = \\\"col-md-5\\\">\\n    <form [formGroup]= \\\"this.customerService.form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <input type=\\\"hidden\\\" formControlName= \\\"$key\\\">\\n      <div class = \\\"form-group\\\">\\n        <label>Name</label>\\n        <input formControlName=\\\"name\\\" class= \\\"form-control\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.name.errors}\\\">\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.name.errors\\\">\\n          This field is required.</div>\\n      </div>\\n      <div class = \\\"form-group\\\">\\n        <label>Surname</label>\\n        <input formControlName = \\\"surname\\\" class = \\\"form-control\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.surname.errors}\\\">\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.surname.errors\\\">\\n          This field is required.</div>\\n      </div>\\n      <div class = \\\"form-group\\\">\\n        <label>Email</label>\\n        <input formControlName=\\\"email\\\" class= \\\"form-control\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.email.errors}\\\">\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.email.errors\\\">\\n          Invalid email address.</div>\\n      </div>\\n      <div class = \\\"form-group\\\">\\n        <label>Phone</label>\\n        <input formControlName=\\\"phone\\\" class= \\\"form-control\\\" [ngClass]=\\\"{'is-invalid':submitted && formControls.phone.errors}\\\">\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && formControls.phone.errors\\\">\\n          <label *ngIf=\\\"formControls.phone.errors.required\\\">This field is required.</label>\\n          <label *ngIf=\\\"formControls.phone.errors.minlength\\\">At least 10 numbers.</label>\\n        </div>\\n      </div>\\n      <div class = \\\"form-group\\\">\\n        <input type=\\\"submit\\\" class= \\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n      </div>\\n    </form>\\n    <div class = \\\"alert alert-info\\\" *ngIf = \\\"showSuccessMessage\\\">\\n      Submitted successfully.\\n    </div>\\n  </div>\\n  <div class = \\\"col-md-7\\\">\\n    <app-customer-list></app-customer-list>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../shared/customer.service';\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  constructor(private customerService: CustomerService) { }\n  submitted: boolean;\n  formControls = this.customerService.form.controls;\n  showSuccessMessage: boolean;\n  ngOnInit() {\n  }\n\n  onSubmit(){\n   this.submitted = true;\n   if (this.customerService.form.valid) {\n    if (this.customerService.form.get('$key').value == null)\n      this.customerService.insertCustomer(this.customerService.form.value);\n    else\n      this.customerService.updateCustomer(this.customerService.form.value);\n      this.showSuccessMessage = true;\n      setTimeout(() => this.showSuccessMessage = false, 3000);\n    this.submitted = false;\n    this.customerService.form.reset();\n    \n    this.customerService.form.setValue({\n      $key: null,\n      name: '',\n      surname: '',\n      email: '',\n      phone: ''\n    });\n  }\n\n}\n}","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  \n\n  constructor(private firebase: AngularFireDatabase) {}\n  customerList: AngularFireList<any>;\n\n\n      form = new FormGroup({\n      $key: new FormControl(null),\n      name: new FormControl('', Validators.required),\n      surname: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.email),\n      phone: new FormControl('', [Validators.required, Validators.minLength(10)] )\n\n    }); \n   \n    getCustomers() {\n      this.customerList = this.firebase.list('customers');\n      return this.customerList.snapshotChanges();\n    }\n\n    insertCustomer(customer) {\n      this.customerList.push({\n        name: customer.name,\n        surname: customer.surname,\n        email: customer.email,\n        phone: customer.phone\n      });\n    }\n\n    populateForm(customer) {\n      this.form.setValue(customer);\n    }\n\n    updateCustomer(customer) {\n      this.customerList.update(customer.$key,\n        {\n          name: customer.name,\n          surname: customer.surname,\n          email: customer.email,\n          phone: customer.phone\n        });\n    }\n\n    deleteCustomer($key: string) {\n      this.customerList.remove($key);\n    }\n  \n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyCQfcAfaqQc3HPTC77tLaSAgKlNZnGgZcA\",\n    authDomain: \"fir-crudapp-47db0.firebaseapp.com\",\n    databaseURL: \"https://fir-crudapp-47db0.firebaseio.com\",\n    projectId: \"fir-crudapp-47db0\",\n    storageBucket: \"fir-crudapp-47db0.appspot.com\",\n    messagingSenderId: \"531678648887\"\n  }\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}